{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Aqsam \u2013 Open\u2011Source School Management System Aqsam (Arabic \u0623\u0642\u0633\u0627\u0645 = \u201cclasses / sections\u201d ) is a lightweight, modular platform that helps small\u2011to\u2011medium schools handle their daily workflow\u2014\u200bfrom enrolling students to publishing grades\u2014\u200bwithout expensive vendor lock\u2011in. Key Features Area What You Get Role\u2011based dashboards Separate views for Admin , Teacher , Student , Parent , Writer Class & subject management Create classes/sections, assign teachers, link multiple subjects Many\u2011to\u2011many teacher mapping One teacher \u2192 many classes/subjects and vice\u2011versa Attendance & grading Quick roll\u2011call UI, performance history, CSV export Assignments (planned) File uploads, deadlines, submission tracking Article publishing Writers can draft, edit, and publish Markdown posts Multilingual UI Via the app/lang/ directory API\u2011ready All core operations exposed via JSON (coming soon) Architecture Flask (app factory) \u2514\u2500\u2500 Blueprints \u251c\u2500 auth/ \u251c\u2500 admin/ \u251c\u2500 teacher/ \u251c\u2500 student/ \u2514\u2500 writer/ SQLAlchemy (SQLite by default) \u2514\u2500\u2500 Models \u251c\u2500 User \u2190 base \u251c\u2500 Student / Teacher / Writer (one\u2011to\u2011one with User) \u251c\u2500 Class, Subject \u251c\u2500 Grade, Article \u2514\u2500 Junctions: teacher_subject / teacher_class / teacher_grades Database migrations are managed with Flask\u2011Migrate (Alembic) . Quick\u2011Start (Dev) # 1. Clone & enter git clone https://github.com/your\u2011org/aqsam.git cd aqsam # 2. Set up a virtual env & install deps python -m venv .venv source .venv/bin/activate # Windows: .venv\\Scripts\\activate pip install -r requirements.txt # 3. Configure (optional) cp config.example.json config.json # then edit secrets / DB path # 4. Create the DB & run flask db upgrade # or python -m aqsam.db_init for quick start python run.py # http://127.0.0.1:5000 Note: In production, run Aqsam behind Gunicorn/Uwsgi + Nginx and swap SQLite for PostgreSQL. Tech Stack Backend: Flask 3\u202f\u00b7\u202fSQLAlchemy 3\u202f\u00b7\u202fFlask\u2011Login \u00b7\u202fFlask\u2011Migrate Frontend: Jinja2\u202f\u00b7\u202fBootstrap 5 (Tailwind optional) Docs: MkDocs Material CI: GitHub Actions (lint\u202f+\u202fpytest) Contributing This project isn't even finished yet. Just wait. License Aqsam is released under the MIT License .","title":"Home"},{"location":"#aqsam-opensource-school-management-system","text":"Aqsam (Arabic \u0623\u0642\u0633\u0627\u0645 = \u201cclasses / sections\u201d ) is a lightweight, modular platform that helps small\u2011to\u2011medium schools handle their daily workflow\u2014\u200bfrom enrolling students to publishing grades\u2014\u200bwithout expensive vendor lock\u2011in.","title":"Aqsam \u2013 Open\u2011Source School Management System"},{"location":"#key-features","text":"Area What You Get Role\u2011based dashboards Separate views for Admin , Teacher , Student , Parent , Writer Class & subject management Create classes/sections, assign teachers, link multiple subjects Many\u2011to\u2011many teacher mapping One teacher \u2192 many classes/subjects and vice\u2011versa Attendance & grading Quick roll\u2011call UI, performance history, CSV export Assignments (planned) File uploads, deadlines, submission tracking Article publishing Writers can draft, edit, and publish Markdown posts Multilingual UI Via the app/lang/ directory API\u2011ready All core operations exposed via JSON (coming soon)","title":"Key Features"},{"location":"#architecture","text":"Flask (app factory) \u2514\u2500\u2500 Blueprints \u251c\u2500 auth/ \u251c\u2500 admin/ \u251c\u2500 teacher/ \u251c\u2500 student/ \u2514\u2500 writer/ SQLAlchemy (SQLite by default) \u2514\u2500\u2500 Models \u251c\u2500 User \u2190 base \u251c\u2500 Student / Teacher / Writer (one\u2011to\u2011one with User) \u251c\u2500 Class, Subject \u251c\u2500 Grade, Article \u2514\u2500 Junctions: teacher_subject / teacher_class / teacher_grades Database migrations are managed with Flask\u2011Migrate (Alembic) .","title":"Architecture"},{"location":"#quickstart-dev","text":"# 1. Clone & enter git clone https://github.com/your\u2011org/aqsam.git cd aqsam # 2. Set up a virtual env & install deps python -m venv .venv source .venv/bin/activate # Windows: .venv\\Scripts\\activate pip install -r requirements.txt # 3. Configure (optional) cp config.example.json config.json # then edit secrets / DB path # 4. Create the DB & run flask db upgrade # or python -m aqsam.db_init for quick start python run.py # http://127.0.0.1:5000 Note: In production, run Aqsam behind Gunicorn/Uwsgi + Nginx and swap SQLite for PostgreSQL.","title":"Quick\u2011Start (Dev)"},{"location":"#tech-stack","text":"Backend: Flask 3\u202f\u00b7\u202fSQLAlchemy 3\u202f\u00b7\u202fFlask\u2011Login \u00b7\u202fFlask\u2011Migrate Frontend: Jinja2\u202f\u00b7\u202fBootstrap 5 (Tailwind optional) Docs: MkDocs Material CI: GitHub Actions (lint\u202f+\u202fpytest)","title":"Tech Stack"},{"location":"#contributing","text":"This project isn't even finished yet. Just wait.","title":"Contributing"},{"location":"#license","text":"Aqsam is released under the MIT License .","title":"License"},{"location":"database_schema/","text":"Aqsam Database Schema (v1) Table Purpose Key Columns / Notes user Base account info (all roles) id , username , password_hash , role , profile fields student Extra fields for students PK/FK id \u2192 user, class_id teacher Extra fields for teachers PK/FK id \u2192 user, subject_id , class_id writer Grants article\u2011writing power PK/FK id \u2192 user class School class / section id , name (e.g. 1A), level subject Teachable subject id , name grade Student\u2019s grade in a subject id , student_id , subject_id , grade , date , comment article Markdown article for blog id , title , author_id , content_md , created_at , last_edited , is_published Relationships One\u2011to\u2011one: user \u2192 student|teacher|writer (same primary key) Many\u2011to\u2011one: student.class_id \u2192 class grade.student_id \u2192 student grade.subject_id \u2192 subject article.author_id \u2192 writer Many\u2011to\u2011Many Links teacher \u21c4 subject \u2003( teacher_subject ) teacher \u21c4 class \u2003 ( teacher_class ) | Junction Table | Columns | Purpose | |----------------|-------------------------------|----------------------------------| | teacher_subject| teacher_id , subject_id | Teacher can teach multiple subjects; subject can have multiple teachers | | teacher_class | teacher_id , class_id | Teacher can teach multiple classes; class can have multiple teachers | Future: if teachers can teach multiple classes / subjects, add junction tables teacher_class and teacher_subject . Last updated: May 3 2025","title":"Aqsam Database Schema (v1)"},{"location":"database_schema/#aqsam-database-schema-v1","text":"Table Purpose Key Columns / Notes user Base account info (all roles) id , username , password_hash , role , profile fields student Extra fields for students PK/FK id \u2192 user, class_id teacher Extra fields for teachers PK/FK id \u2192 user, subject_id , class_id writer Grants article\u2011writing power PK/FK id \u2192 user class School class / section id , name (e.g. 1A), level subject Teachable subject id , name grade Student\u2019s grade in a subject id , student_id , subject_id , grade , date , comment article Markdown article for blog id , title , author_id , content_md , created_at , last_edited , is_published","title":"Aqsam Database Schema (v1)"},{"location":"database_schema/#relationships","text":"One\u2011to\u2011one: user \u2192 student|teacher|writer (same primary key) Many\u2011to\u2011one: student.class_id \u2192 class grade.student_id \u2192 student grade.subject_id \u2192 subject article.author_id \u2192 writer","title":"Relationships"},{"location":"database_schema/#manytomany-links","text":"teacher \u21c4 subject \u2003( teacher_subject ) teacher \u21c4 class \u2003 ( teacher_class ) | Junction Table | Columns | Purpose | |----------------|-------------------------------|----------------------------------| | teacher_subject| teacher_id , subject_id | Teacher can teach multiple subjects; subject can have multiple teachers | | teacher_class | teacher_id , class_id | Teacher can teach multiple classes; class can have multiple teachers | Future: if teachers can teach multiple classes / subjects, add junction tables teacher_class and teacher_subject . Last updated: May 3 2025","title":"Many\u2011to\u2011Many Links"},{"location":"service_functions/","text":"","title":"Service functions"}]}